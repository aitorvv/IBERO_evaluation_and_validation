#"Edad_max" = "Edad máxima",
#"Tipo_corta" = "Tipo de corta",
#"Criterio_corta" = "Criterio de corta",
"Grado_de_la_corta" = "Grado_de_la_corta",
"INVENTORY_ID_IFN3" = "ID_Inventario",
#"Tiempo_ejecuciones" = "Tiempo ejecuciones",
#"Tipo_parcela" = "Tipo de parcela",
#"Sup_parcela" = "Superficie de parcela",
#"Zona_estudio" = "Zona de estudio",
#"Region" = "Región de procedencia",
#"Composicion" = "Composición específica",
#"ID_esp" = "ID especie principal (IFN)",
#"Expo" = "Exposición",
"N_ext" = "N_extraido",
"g_max" = "g_maxima",
"g_min" = "g_minima",
"g_pro" = "g_medio",
"G_ext" = "G_extraida",
"d_max" = "dbh_maximo",
"d_min" = "dbh_minimo",
"d_pro" = "dbh_medio",
"h_max" = "h_maxima",
"h_min" = "h_minima",
"h_pro" = "h_media",
#"r_SDI" = "r (SDI)",
#"SI_ER" = "SI edad ref",
"V_ext" = "V_extraido",
# conservar
"PLOT_ID" = "ID_Parcela",
#"Nombre_modelo" = "Nombre del modelo",
"T_IFN3" = "T",
"N_IFN3" = "N",
"N_muerto_IFN3" = "N_muerto",
"N_incorporado_IFN3" = "N_incorporado",
"G_IFN3" = "G",
"G_muerta_IFN3" = "G_muerta",
"G_incorporada_IFN3" = "G_incorporada",
"dg_IFN3" = "dg",
"Do_IFN3" = "Do",
"Seccion_dominante_IFN3" = "Seccion_dominante",
"Ho_IFN3" = "Ho",
"d_copa_IFN3" = "d_medio_copa",
"Do_copa_IFN3" = "Do_copa",
"FCC_IFN3" = "FCC",
"SDI_IFN3" = "SDI",
"Hart_IFN3" = "HartBecking__marco_real",
"Hart_tresbolillo_IFN3" = "HartBecking__tresbolillo",
"SI_IFN3" = "SI",
"VOB_IFN3" = "V_con_corteza",
"VUB_IFN3" = "V_sin_corteza",
"VBARK_IFN3" = "V_de_corteza",
"V_muerto_IFN3" = "V_muerto",
"V_incorporado_IFN3" = "V_incorporado",
"V_sierra_gruesa_IFN3" = "V_sierra_gruesa",
"V_sierra_IFN3" = "V_sierra",
"V_sierra_canter_IFN3" = "V_sierra_canter",
"V_trituracion_IFN3" = "V_trituracion",
"WSW_IFN3" = "WSW",
"WTHICKB_IFN3" = "WTHICKB",
"WB2_7_IFN3" = "WB2_7",
#"WB2_t_IFN3" = "WB2_t",
"WTBL_IFN3" = "WTBL",
"WR_IFN3" = "WR",
"WT_IFN3" = "WT",
"WT_muerta_IFN3" = "WT_muerta",
"WT_incorporada_IFN3" = "WT_incorporada"
))
trees_IFN3 <- subset(trees_IFN3, select = -c(estado, especie, t, h_tocon))
plots_IFN3 <- subset(plots_IFN3, select = -c(Edad_escenario, Edad_maxima, Edad_minima, Tipo_de_corta, Accion, Tiempo,
Grado_de_la_corta, Criterio_de_corta, N_ext, g_max, g_min, g_pro, G_ext, d_max, d_min, d_pro,
h_max, h_min, h_pro, V_ext))
ing_trees = 0  # IFN2
cut_trees = 0  # IFN3
dead_trees = 888  # IFN3
IFN3_trees_ing <- filter(trees_IFN3, trees_IFN3$TREE_ID_IFN2 == ing_trees)
IFN3_trees_cut <- filter(trees_IFN3, trees_IFN3$TREE_ID_IFN3 == cut_trees)
IFN3_trees_dead <- filter(trees_IFN3, trees_IFN3$TREE_ID_IFN3 == dead_trees)
IFN3_ing <- ddply(IFN3_trees_ing, c('PLOT_ID'), summarise,
G_incorporada_IFN3 = sum(g_IFN3*expan_IFN3/10000, na.rm = TRUE),
N_incorporado_IFN3 = sum(expan_IFN3, na.rm = TRUE),
V_incorporado_IFN3 = sum(vob_IFN3*expan_IFN3/1000, na.rm = TRUE),
WT_incorporada_IFN3 = sum(wt_IFN3*expan_IFN3/1000), na.rm = TRUE)
IFN3_cut <- ddply(IFN3_trees_cut, c('PLOT_ID'), summarise,
G_cortada_IFN3 = sum(g_IFN3*expan_IFN3/10000, na.rm = TRUE),
N_cortado_IFN3 = sum(expan_IFN3, na.rm = TRUE),
V_cortado_IFN3 = sum(vob_IFN3*expan_IFN3/1000, na.rm = TRUE),
WT_cortada_IFN3 = sum(wt_IFN3*expan_IFN3/1000), na.rm = TRUE)
IFN3_dead <- ddply(IFN3_trees_dead, c('PLOT_ID'), summarise,
G_muerta_IFN3 = sum(g_IFN3*expan_IFN3/10000, na.rm = TRUE),
N_muerto_IFN3 = sum(expan_IFN3, na.rm = TRUE),
V_muerto_IFN3 = sum(vob_IFN3*expan_IFN3/1000, na.rm = TRUE),
WT_muerta_IFN3 = sum(wt_IFN3*expan_IFN3/1000), na.rm = TRUE)
IFN3_calcs <- merge(IFN3_ing, IFN3_cut, all = TRUE, by = 'PLOT_ID')
IFN3_calcs <- merge(IFN3_calcs, IFN3_dead, all = TRUE, by = 'PLOT_ID')
plots_IFN3 <- merge(plots_IFN3, IFN3_calcs, all = TRUE, by = 'PLOT_ID')
plots_IFN3 <- subset(plots_IFN3, select = -c(na.rm, na.rm.x, na.rm.y))
IFN2_original_trees <- read.csv(file = "../../R_outputs/output_1_1/trees_IFN2_s21_IBEROPS.csv", sep = ',')
IFN2_and_IFN2new <- merge(trees_IFN2, IFN2_original_trees, all = FALSE, by = ('TREE_ID'))
IFN2_and_IFN2new$dbh_i_IFN2 <- IFN2_and_IFN2new$dbh_IFN2 - IFN2_and_IFN2new$dbh
IFN2_and_IFN2new$h_i_IFN2 <- IFN2_and_IFN2new$h_IFN2 - IFN2_and_IFN2new$height
IFN2_and_IFN2new <- select(IFN2_and_IFN2new, c(TREE_ID, dbh_i_IFN2, h_i_IFN2, dbh))  # guardo también el dbh original
trees_IFN2 <- merge(trees_IFN2, IFN2_and_IFN2new, by = ('TREE_ID'))
IFN3_and_IFN2new <- merge(trees_IFN3, IFN2_original_trees, all = TRUE, by.x = ('TREE_ID_compare'),  by.y = ('TREE_ID'))
IFN3_and_IFN2new$dbh_i_IFN3 <- IFN3_and_IFN2new$dbh_IFN3 - IFN3_and_IFN2new$dbh
IFN3_and_IFN2new$h_i_IFN3 <- IFN3_and_IFN2new$h_IFN3 - IFN3_and_IFN2new$height
IFN3_and_IFN2new <- select(IFN3_and_IFN2new, c(TREE_ID, dbh_i_IFN3, h_i_IFN3))
# elimino las que tienen valores negativos (Valent?n ha puesto . a los NA) porque, al menos la mayor?a, son resultado de
# que el ?rbol no existe en el IFN3 (cortado o muerto)
IFN3_and_IFN2new$dbh_i_IFN3 <- ifelse(IFN3_and_IFN2new$dbh_i_IFN3 < 0, '.', IFN3_and_IFN2new$dbh_i_IFN3)
IFN3_and_IFN2new$h_i_IFN3 <- ifelse(IFN3_and_IFN2new$h_i_IFN3 < 0, '.', IFN3_and_IFN2new$h_i_IFN3)
trees_IFN3 <- merge(trees_IFN3, IFN3_and_IFN2new, by = ('TREE_ID'))
trees_IFN3$dbh_i_IFN3 <- as.numeric(trees_IFN3$dbh_i_IFN3)
trees_IFN3$h_i_IFN3 <- as.numeric(trees_IFN3$h_i_IFN3)
plots_IFN <- merge(plots_IFN2, plots_IFN3, all = TRUE, by = 'PLOT_ID')
trees_IFN <- merge(trees_IFN2, trees_IFN3, all = TRUE, by.x = 'TREE_ID', by.y = 'TREE_ID_compare')
# exportar a .csv
#plots_IFN <- plots_IFN[!plots_IFN$PLOT_ID == '5_1003',]
write.csv(plots_IFN, file = "../../R_outputs/validaciones/plots_IFN_iberops_ingrowth_tech.csv", fileEncoding = "UTF-8")
write.csv(trees_IFN, file = "../../R_outputs/validaciones/trees_IFN_iberops_ingrowth_tech.csv", fileEncoding = "UTF-8")
setwd("/media/aitor/HDD/iuFOR_trabajo/SIMANFOR/IFN/SM4_simulations/IBEROps_IFN2_mortalidad_sdi")
plots_IFN2 <- data.frame()
trees_IFN2 <- data.frame()
plots_IFN2_exec1 <- data.frame()
files_list <- list.files(path = ".", pattern="xlsx")
for (doc in files_list) {
plot_data <- read_excel(doc, sheet = "Parcelas")  # leo la informaci?n de parcelas
last_row <- nrow(plot_data)  # consigo saber el n? de filas que tiene el archivo
useful_row <- plot_data[c(last_row),]  # extraigo la informaci?n de la ?ltima fila
# si es la primera fila a?ado encabezados, sino solo a?ado los datos al data.frame final
ifelse(length(plots_IFN2) == 0, plots_IFN2 <- rbind(useful_row), plots_IFN2 <- rbind(plots_IFN2, useful_row))
tree_data <- read_excel(doc, sheet = "Nodo 3 - Pies inventariados")  # leo la informaci?n de ?rboles
tree_data <- tree_data[  # selecciono solo los ?rboles vivos
(is.na(tree_data$estado)),
]
tree_data$sheet_SM4 <- 'Nodo 3 - Pies inventariados'
# si es la primera fila a?ado encabezados, sino solo a?ado los datos al data.frame final
ifelse(length(trees_IFN2) == 0, trees_IFN2 <- rbind(tree_data), trees_IFN2 <- rbind(trees_IFN2, tree_data))
}
for (doc in files_list) {
plot_data <- read_excel(doc, sheet = "Parcelas")  # leo la informaci?n de parcelas
second_row <- nrow(plot_data) - 1  # consigo saber el n? de filas que tiene el archivo y accedo a la anterior
useful_row <- plot_data[c(second_row),]  # extraigo la informaci?n de la pen?ltima fila
# si es la primera fila a?ado encabezados, sino solo a?ado los datos al data.frame final
ifelse(length(plots_IFN2_exec1) == 0, plots_IFN2_exec1 <- rbind(useful_row), plots_IFN2_exec1 <- rbind(plots_IFN2_exec1, useful_row))
}
setwd("/media/aitor/HDD/iuFOR_trabajo/SIMANFOR/IFN/SM4_simulations/IBEROps_IFN3")
plots_IFN3 <- data.frame()
trees_IFN3 <- data.frame()
files_list <- list.files(path = ".", pattern="xlsx")
for (doc in files_list) {
plot_data <- read_excel(doc, sheet = "Parcelas")  # leo la informaci?n de parcelas
last_row <- nrow(plot_data)  # consigo saber el n? de filas que tiene el archivo
useful_row <- plot_data[c(last_row),]  # extraigo la informaci?n de la ?ltima fila
# si es la primera fila a?ado encabezados, sino solo a?ado los datos al data.frame final
ifelse(length(plots_IFN3) == 0, plots_IFN3 <- rbind(useful_row), plots_IFN3 <- rbind(plots_IFN3, useful_row))
tree_data <- read_excel(doc, sheet = "Nodo 1 - Pies inventariados")  # leo la informaci?n de ?rboles
tree_data <- tree_data[  # selecciono solo los ?rboles vivos
(is.na(tree_data$estado)),
]
tree_data$sheet_SM4 <- 'Nodo 1 - Pies inventariados'
# si es la primera fila a?ado encabezados, sino solo a?ado los datos al data.frame final
ifelse(length(trees_IFN3) == 0, trees_IFN3 <- rbind(tree_data), trees_IFN3 <- rbind(trees_IFN3, tree_data))
}
trees_IFN2 <- rename(trees_IFN2, c("INVENTORY_ID_IFN2" = "ID_inventario",
"PLOT_ID" = "ID_parcela",
"TREE_ID" = "ID_arbol",
#"specie" = "especie",
"expan_IFN2" = "factor_expansion",
"dbh_IFN2" = "dbh",
"h_IFN2" = "h",
"h_tocon" = "h_tocon",  # eliminar
"g_IFN2" = "g",
"bal_IFN2" = "bal",
"circ_normal_IFN2" = "circunferencia_normal",
"esbeltez_IFN2" = "esbeltez",
"cr_IFN2" = "cr",
"lcw_IFN2" = "lcw",
"hcb_IFN2" = "hcb",
"hlcw_IFN2" = "hlcw",
"vob_IFN2" = "v_con_corteza",
"vub_IFN2" = "v_sin_corteza",
"vbark_IFN2" = "v_de_corteza",
"v_sierra_gruesa_IFN2" = "v_sierra_gruesa",
"v_sierra_IFN2" = "v_sierra",
"v_sierra_canter_IFN2" = "v_sierra_canter",
"v_trituracion_IFN2" = "v_trituracion",
"wsw_IFN2" = "wsw",
"wthickb_IFN2" = "wthickb",
"wb2_7_IFN2" = "wb2_7",
#"wb2_t_IFN2" = "wb2_t",
"wtbl_IFN2" = "wtbl",
"wr_IFN2" = "wr",
"wt_IFN2" = "wt",
"g_ha" = "g_ha",
"v_ha" = "v_ha",
#"coord_x"  = "coord X",  # eliminar
#"coord_y"  = "coord Y",      # eliminar
"sheet_SM4_IFN2" = "sheet_SM4"
))
plots_IFN2 <- rename(plots_IFN2, c(# eliminar
#"ID_escenario" = "ID escenario",
"Edad_escenario" = "Edad_de_escenario",
#"Edad_min" = "Edad mínima",
#"Edad_max" = "Edad máxima",
#"Tipo_corta" = "Tipo de corta",
#"Criterio_corta" = "Criterio de corta",
"Grado_de_la_corta" = "Grado_de_la_corta",
"INVENTORY_ID_IFN2" = "ID_Inventario",
#"Tiempo_ejecuciones" = "Tiempo ejecuciones",
#"Tipo_parcela" = "Tipo de parcela",
#"Sup_parcela" = "Superficie de parcela",
#"Zona_estudio" = "Zona de estudio",
#"Region" = "Región de procedencia",
#"Composicion" = "Composición específica",
#"ID_esp" = "ID especie principal (IFN)",
#"Expo" = "Exposición",
"N_ext" = "N_extraido",
"g_max" = "g_maxima",
"g_min" = "g_minima",
"g_pro" = "g_medio",
"G_ext" = "G_extraida",
"d_max" = "dbh_maximo",
"d_min" = "dbh_minimo",
"d_pro" = "dbh_medio",
"h_max" = "h_maxima",
"h_min" = "h_minima",
"h_pro" = "h_media",
#"r_SDI" = "r (SDI)",
#"SI_ER" = "SI edad ref",
"V_ext" = "V_extraido",
# conservar
"PLOT_ID" = "ID_Parcela",
#"Nombre_modelo" = "Nombre del modelo",
"T_IFN2" = "T",
"N_IFN2" = "N",
"N_muerto_IFN2" = "N_muerto",
"N_incorporado_IFN2" = "N_incorporado",
"G_IFN2" = "G",
"G_muerta_IFN2" = "G_muerta",
"G_incorporada_IFN2" = "G_incorporada",
"dg_IFN2" = "dg",
"Do_IFN2" = "Do",
"Seccion_dominante_IFN2" = "Seccion_dominante",
"Ho_IFN2" = "Ho",
"d_copa_IFN2" = "d_medio_copa",
"Do_copa_IFN2" = "Do_copa",
"FCC_IFN2" = "FCC",
"SDI_IFN2" = "SDI",
"Hart_IFN2" = "HartBecking__marco_real",
"Hart_tresbolillo_IFN2" = "HartBecking__tresbolillo",
"SI_IFN2" = "SI",
"VOB_IFN2" = "V_con_corteza",
"VUB_IFN2" = "V_sin_corteza",
"VBARK_IFN2" = "V_de_corteza",
"V_muerto_IFN2" = "V_muerto",
"V_incorporado_IFN2" = "V_incorporado",
"V_sierra_gruesa_IFN2" = "V_sierra_gruesa",
"V_sierra_IFN2" = "V_sierra",
"V_sierra_canter_IFN2" = "V_sierra_canter",
"V_trituracion_IFN2" = "V_trituracion",
"WSW_IFN2" = "WSW",
"WTHICKB_IFN2" = "WTHICKB",
"WB2_7_IFN2" = "WB2_7",
#"WB2_t_IFN2" = "WB2_t",
"WTBL_IFN2" = "WTBL",
"WR_IFN2" = "WR",
"WT_IFN2" = "WT",
"WT_muerta_IFN2" = "WT_muerta",
"WT_incorporada_IFN2" = "WT_incorporada"
))
trees_IFN2 <- subset(trees_IFN2, select = -c(estado, especie, t, h_tocon, g_ha, v_ha))
plots_IFN2 <- subset(plots_IFN2, select = -c(Edad_escenario, Edad_maxima, Edad_minima, Tipo_de_corta, Accion, Tiempo,
Grado_de_la_corta, Criterio_de_corta, N_ext, g_max, g_min, g_pro, G_ext, d_max, d_min, d_pro,
h_max, h_min, h_pro, V_ext))
plots_IFN2_exec1 <- rename(plots_IFN2_exec1, c(# eliminar
#"ID_escenario" = "ID escenario",
"Edad_escenario" = "Edad_de_escenario",
#"Edad_min" = "Edad mínima",
#"Edad_max" = "Edad máxima",
#"Tipo_corta" = "Tipo de corta",
#"Criterio_corta" = "Criterio de corta",
"Grado_de_la_corta" = "Grado_de_la_corta",
"INVENTORY_ID_IFN2" = "ID_Inventario",
#"Tiempo_ejecuciones" = "Tiempo ejecuciones",
#"Tipo_parcela" = "Tipo de parcela",
#"Sup_parcela" = "Superficie de parcela",
#"Zona_estudio" = "Zona de estudio",
#"Region" = "Región de procedencia",
#"Composicion" = "Composición específica",
#"ID_esp" = "ID especie principal (IFN)",
#"Expo" = "Exposición",
"N_ext" = "N_extraido",
"g_max" = "g_maxima",
"g_min" = "g_minima",
"g_pro" = "g_medio",
"G_ext" = "G_extraida",
"d_max" = "dbh_maximo",
"d_min" = "dbh_minimo",
"d_pro" = "dbh_medio",
"h_max" = "h_maxima",
"h_min" = "h_minima",
"h_pro" = "h_media",
#"r_SDI" = "r (SDI)",
#"SI_ER" = "SI edad ref",
"V_ext" = "V_extraido",
# conservar
"PLOT_ID" = "ID_Parcela",
#"Nombre_modelo" = "Nombre del modelo",
"T_IFN2" = "T",
"N_IFN2" = "N",
"N_muerto_IFN2" = "N_muerto",
"N_incorporado_IFN2" = "N_incorporado",
"G_IFN2" = "G",
"G_muerta_IFN2" = "G_muerta",
"G_incorporada_IFN2" = "G_incorporada",
"dg_IFN2" = "dg",
"Do_IFN2" = "Do",
"Seccion_dominante_IFN2" = "Seccion_dominante",
"Ho_IFN2" = "Ho",
"d_copa_IFN2" = "d_medio_copa",
"Do_copa_IFN2" = "Do_copa",
"FCC_IFN2" = "FCC",
"SDI_IFN2" = "SDI",
"Hart_IFN2" = "HartBecking__marco_real",
"Hart_tresbolillo_IFN2" = "HartBecking__tresbolillo",
"SI_IFN2" = "SI",
"VOB_IFN2" = "V_con_corteza",
"VUB_IFN2" = "V_sin_corteza",
"VBARK_IFN2" = "V_de_corteza",
"V_muerto_IFN2" = "V_muerto",
"V_incorporado_IFN2" = "V_incorporado",
"V_sierra_gruesa_IFN2" = "V_sierra_gruesa",
"V_sierra_IFN2" = "V_sierra",
"V_sierra_canter_IFN2" = "V_sierra_canter",
"V_trituracion_IFN2" = "V_trituracion",
"WSW_IFN2" = "WSW",
"WTHICKB_IFN2" = "WTHICKB",
"WB2_7_IFN2" = "WB2_7",
#"WB2_t_IFN2" = "WB2_t",
"WTBL_IFN2" = "WTBL",
"WR_IFN2" = "WR",
"WT_IFN2" = "WT",
"WT_muerta_IFN2" = "WT_muerta",
"WT_incorporada_IFN2" = "WT_incorporada"
))
plots_IFN2$N_muerto_IFN2 <- plots_IFN2$N_muerto_IFN2 + plots_IFN2_exec1$N_muerto_IFN2
plots_IFN2$G_muerta_IFN2 <- plots_IFN2$G_muerta_IFN2 + plots_IFN2_exec1$G_muerta_IFN2
plots_IFN2$V_muerto_IFN2 <- plots_IFN2$V_muerto_IFN2 + plots_IFN2_exec1$V_muerto_IFN2
plots_IFN2$WT_muerta_IFN2 <- plots_IFN2$WT_muerta_IFN2 + plots_IFN2_exec1$WT_muerta_IFN2
plots_IFN2$N_incorporado_IFN2 <- plots_IFN2$N_incorporado_IFN2 + plots_IFN2_exec1$N_incorporado_IFN2
plots_IFN2$G_incorporada_IFN2 <- plots_IFN2$G_incorporada_IFN2 + plots_IFN2_exec1$G_incorporada_IFN2
plots_IFN2$V_incorporado_IFN2 <- plots_IFN2$V_incorporado_IFN2 + plots_IFN2_exec1$V_incorporado_IFN2
plots_IFN2$WT_incorporada_IFN2 <- plots_IFN2$WT_incorporada_IFN2 + plots_IFN2_exec1$WT_incorporada_IFN2
trees_IFN3 <- rename(trees_IFN3, c("INVENTORY_ID_IFN3" = "ID_inventario",
"PLOT_ID" = "ID_parcela",
"TREE_ID" = "ID_arbol",
#"specie" = "especie",
"expan_IFN3" = "factor_expansion",
"dbh_IFN3" = "dbh",
"h_IFN3" = "h",
"h_tocon" = "h_tocon",  # eliminar
"g_IFN3" = "g",
"bal_IFN3" = "bal",
"circ_normal_IFN3" = "circunferencia_normal",
"esbeltez_IFN3" = "esbeltez",
"cr_IFN3" = "cr",
"lcw_IFN3" = "lcw",
"hcb_IFN3" = "hcb",
"hlcw_IFN3" = "hlcw",
"vob_IFN3" = "v_con_corteza",
"vub_IFN3" = "v_sin_corteza",
"vbark_IFN3" = "v_de_corteza",
"v_sierra_gruesa_IFN3" = "v_sierra_gruesa",
"v_sierra_IFN3" = "v_sierra",
"v_sierra_canter_IFN3" = "v_sierra_canter",
"v_trituracion_IFN3" = "v_trituracion",
"wsw_IFN3" = "wsw",
"wthickb_IFN3" = "wthickb",
"wb2_7_IFN3" = "wb2_7",
#"wb2_t_IFN3" = "wb2_t",
"wtbl_IFN3" = "wtbl",
"wr_IFN3" = "wr",
"wt_IFN3" = "wt",
"g_ha" = "g_ha",
"v_ha" = "v_ha",
#"coord_x"  = "coord X",  # eliminar
#"coord_y"  = "coord Y",      # eliminar
"sheet_SM4_IFN3" = "sheet_SM4"
))
plots_IFN3 <- rename(plots_IFN3, c(# eliminar
#"ID_escenario" = "ID escenario",
"Edad_escenario" = "Edad_de_escenario",
#"Edad_min" = "Edad mínima",
#"Edad_max" = "Edad máxima",
#"Tipo_corta" = "Tipo de corta",
#"Criterio_corta" = "Criterio de corta",
"Grado_de_la_corta" = "Grado_de_la_corta",
"INVENTORY_ID_IFN3" = "ID_Inventario",
#"Tiempo_ejecuciones" = "Tiempo ejecuciones",
#"Tipo_parcela" = "Tipo de parcela",
#"Sup_parcela" = "Superficie de parcela",
#"Zona_estudio" = "Zona de estudio",
#"Region" = "Región de procedencia",
#"Composicion" = "Composición específica",
#"ID_esp" = "ID especie principal (IFN)",
#"Expo" = "Exposición",
"N_ext" = "N_extraido",
"g_max" = "g_maxima",
"g_min" = "g_minima",
"g_pro" = "g_medio",
"G_ext" = "G_extraida",
"d_max" = "dbh_maximo",
"d_min" = "dbh_minimo",
"d_pro" = "dbh_medio",
"h_max" = "h_maxima",
"h_min" = "h_minima",
"h_pro" = "h_media",
#"r_SDI" = "r (SDI)",
#"SI_ER" = "SI edad ref",
"V_ext" = "V_extraido",
# conservar
"PLOT_ID" = "ID_Parcela",
#"Nombre_modelo" = "Nombre del modelo",
"T_IFN3" = "T",
"N_IFN3" = "N",
"N_muerto_IFN3" = "N_muerto",
"N_incorporado_IFN3" = "N_incorporado",
"G_IFN3" = "G",
"G_muerta_IFN3" = "G_muerta",
"G_incorporada_IFN3" = "G_incorporada",
"dg_IFN3" = "dg",
"Do_IFN3" = "Do",
"Seccion_dominante_IFN3" = "Seccion_dominante",
"Ho_IFN3" = "Ho",
"d_copa_IFN3" = "d_medio_copa",
"Do_copa_IFN3" = "Do_copa",
"FCC_IFN3" = "FCC",
"SDI_IFN3" = "SDI",
"Hart_IFN3" = "HartBecking__marco_real",
"Hart_tresbolillo_IFN3" = "HartBecking__tresbolillo",
"SI_IFN3" = "SI",
"VOB_IFN3" = "V_con_corteza",
"VUB_IFN3" = "V_sin_corteza",
"VBARK_IFN3" = "V_de_corteza",
"V_muerto_IFN3" = "V_muerto",
"V_incorporado_IFN3" = "V_incorporado",
"V_sierra_gruesa_IFN3" = "V_sierra_gruesa",
"V_sierra_IFN3" = "V_sierra",
"V_sierra_canter_IFN3" = "V_sierra_canter",
"V_trituracion_IFN3" = "V_trituracion",
"WSW_IFN3" = "WSW",
"WTHICKB_IFN3" = "WTHICKB",
"WB2_7_IFN3" = "WB2_7",
#"WB2_t_IFN3" = "WB2_t",
"WTBL_IFN3" = "WTBL",
"WR_IFN3" = "WR",
"WT_IFN3" = "WT",
"WT_muerta_IFN3" = "WT_muerta",
"WT_incorporada_IFN3" = "WT_incorporada"
))
trees_IFN3 <- subset(trees_IFN3, select = -c(estado, especie, t, h_tocon))
plots_IFN3 <- subset(plots_IFN3, select = -c(Edad_escenario, Edad_maxima, Edad_minima, Tipo_de_corta, Accion, Tiempo,
Grado_de_la_corta, Criterio_de_corta, N_ext, g_max, g_min, g_pro, G_ext, d_max, d_min, d_pro,
h_max, h_min, h_pro, V_ext))
ing_trees = 0  # IFN2
cut_trees = 0  # IFN3
dead_trees = 888  # IFN3
IFN3_trees_ing <- filter(trees_IFN3, trees_IFN3$TREE_ID_IFN2 == ing_trees)
IFN3_trees_cut <- filter(trees_IFN3, trees_IFN3$TREE_ID_IFN3 == cut_trees)
IFN3_trees_dead <- filter(trees_IFN3, trees_IFN3$TREE_ID_IFN3 == dead_trees)
IFN3_ing <- ddply(IFN3_trees_ing, c('PLOT_ID'), summarise,
G_incorporada_IFN3 = sum(g_IFN3*expan_IFN3/10000, na.rm = TRUE),
N_incorporado_IFN3 = sum(expan_IFN3, na.rm = TRUE),
V_incorporado_IFN3 = sum(vob_IFN3*expan_IFN3/1000, na.rm = TRUE),
WT_incorporada_IFN3 = sum(wt_IFN3*expan_IFN3/1000), na.rm = TRUE)
IFN3_cut <- ddply(IFN3_trees_cut, c('PLOT_ID'), summarise,
G_cortada_IFN3 = sum(g_IFN3*expan_IFN3/10000, na.rm = TRUE),
N_cortado_IFN3 = sum(expan_IFN3, na.rm = TRUE),
V_cortado_IFN3 = sum(vob_IFN3*expan_IFN3/1000, na.rm = TRUE),
WT_cortada_IFN3 = sum(wt_IFN3*expan_IFN3/1000), na.rm = TRUE)
IFN3_dead <- ddply(IFN3_trees_dead, c('PLOT_ID'), summarise,
G_muerta_IFN3 = sum(g_IFN3*expan_IFN3/10000, na.rm = TRUE),
N_muerto_IFN3 = sum(expan_IFN3, na.rm = TRUE),
V_muerto_IFN3 = sum(vob_IFN3*expan_IFN3/1000, na.rm = TRUE),
WT_muerta_IFN3 = sum(wt_IFN3*expan_IFN3/1000), na.rm = TRUE)
IFN3_calcs <- merge(IFN3_ing, IFN3_cut, all = TRUE, by = 'PLOT_ID')
IFN3_calcs <- merge(IFN3_calcs, IFN3_dead, all = TRUE, by = 'PLOT_ID')
plots_IFN3 <- merge(plots_IFN3, IFN3_calcs, all = TRUE, by = 'PLOT_ID')
plots_IFN3 <- subset(plots_IFN3, select = -c(na.rm, na.rm.x, na.rm.y))
IFN2_original_trees <- read.csv(file = "../../R_outputs/output_1_1/trees_IFN2_s21_IBEROPS.csv", sep = ',')
IFN2_and_IFN2new <- merge(trees_IFN2, IFN2_original_trees, all = FALSE, by = ('TREE_ID'))
IFN2_and_IFN2new$dbh_i_IFN2 <- IFN2_and_IFN2new$dbh_IFN2 - IFN2_and_IFN2new$dbh
IFN2_and_IFN2new$h_i_IFN2 <- IFN2_and_IFN2new$h_IFN2 - IFN2_and_IFN2new$height
IFN2_and_IFN2new <- select(IFN2_and_IFN2new, c(TREE_ID, dbh_i_IFN2, h_i_IFN2, dbh))  # guardo también el dbh original
trees_IFN2 <- merge(trees_IFN2, IFN2_and_IFN2new, by = ('TREE_ID'))
IFN3_and_IFN2new <- merge(trees_IFN3, IFN2_original_trees, all = TRUE, by.x = ('TREE_ID_compare'),  by.y = ('TREE_ID'))
IFN3_and_IFN2new$dbh_i_IFN3 <- IFN3_and_IFN2new$dbh_IFN3 - IFN3_and_IFN2new$dbh
IFN3_and_IFN2new$h_i_IFN3 <- IFN3_and_IFN2new$h_IFN3 - IFN3_and_IFN2new$height
IFN3_and_IFN2new <- select(IFN3_and_IFN2new, c(TREE_ID, dbh_i_IFN3, h_i_IFN3))
# elimino las que tienen valores negativos (Valent?n ha puesto . a los NA) porque, al menos la mayor?a, son resultado de
# que el ?rbol no existe en el IFN3 (cortado o muerto)
IFN3_and_IFN2new$dbh_i_IFN3 <- ifelse(IFN3_and_IFN2new$dbh_i_IFN3 < 0, '.', IFN3_and_IFN2new$dbh_i_IFN3)
IFN3_and_IFN2new$h_i_IFN3 <- ifelse(IFN3_and_IFN2new$h_i_IFN3 < 0, '.', IFN3_and_IFN2new$h_i_IFN3)
trees_IFN3 <- merge(trees_IFN3, IFN3_and_IFN2new, by = ('TREE_ID'))
trees_IFN3$dbh_i_IFN3 <- as.numeric(trees_IFN3$dbh_i_IFN3)
trees_IFN3$h_i_IFN3 <- as.numeric(trees_IFN3$h_i_IFN3)
plots_IFN <- merge(plots_IFN2, plots_IFN3, all = TRUE, by = 'PLOT_ID')
trees_IFN <- merge(trees_IFN2, trees_IFN3, all = TRUE, by.x = 'TREE_ID', by.y = 'TREE_ID_compare')
# exportar a .csv
#plots_IFN <- plots_IFN[!plots_IFN$PLOT_ID == '5_1003',]
write.csv(plots_IFN, file = "../../R_outputs/validaciones/plots_IFN_iberops_mortalidad_sdi.csv", fileEncoding = "UTF-8")
write.csv(trees_IFN, file = "../../R_outputs/validaciones/trees_IFN_iberops_mortalidad_sdi.csv", fileEncoding = "UTF-8")
